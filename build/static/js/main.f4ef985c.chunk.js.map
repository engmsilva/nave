{"version":3,"sources":["ContextAPI/index.js","router.js","App.js","index.js","ContextAPI/reduncer.js","ContextAPI/context.js","pages/Auth/localStorage.js"],"names":["Context","props","children","Main","lazy","Auth","Navers","Forms","routeProtect","mode","routeDMZ","Router","zoneProtect","useRoutes","zoneDMZ","currentPath","usePath","React","useEffect","getIsAuth","Object","keys","includes","navigate","postCurrentPath","getCurrentPath","fallback","key","className","size","App","ReactDOM","render","document","getElementById","initialState","dataNavers","showModal","naverSelect","reducer","state","action","type","payload","nested","value","remove","filter","item","id","ContextAPI","createContext","Provider","useState","status","setStatus","useReducer","dispatch","EDITTEMP","sessionStorage","getItem","getToken","getEditTemp","json","JSON","parse","postIsAuth","setItem","postToken","token","postEditTemp","data","stringify","path","logout","removeItem"],"mappings":"uKAGe,SAASA,EAAQC,GAAQ,IAC9BC,EAAaD,EAAbC,SACR,OACE,kBAAC,IAAD,KACGA,G,0CCGDC,G,OAAOC,gBAAK,kBAAM,yDAClBC,EAAOD,gBAAK,kBAAM,qEAClBE,EAASF,gBAAK,kBAAM,6EACpBG,EAAQH,gBAAK,kBAAM,4EAEnBI,EAAe,CACnB,UAAW,kBAAM,kBAACF,EAAD,OACjB,YAAa,kBAAM,kBAACC,EAAD,CAAOE,KAAK,cAC/B,QAAS,kBAAM,kBAACF,EAAD,CAAOE,KAAK,WAGvBC,EAAW,CACf,IAAK,kBAAM,kBAACL,EAAD,QAGE,SAASM,IACtB,IAAMC,EAAcC,oBAAUL,GACxBM,EAAUD,oBAAUH,GACnBK,EAAgBC,mBAAQ,GAe7B,OAbFC,IAAMC,WAAU,WACVC,eAAgBC,OAAOC,KAAKX,GAAUY,SAASP,IACjDQ,mBAAS,KAERJ,eAAeC,OAAOC,KAAKb,GAAcc,SAASP,IACnDS,YAAgBT,GAEfI,gBAAgBC,OAAOC,KAAKb,GAAcc,SAASP,IACpDQ,mBAASE,iBAGX,CAACV,EAAaD,IAGZ,oCACE,kBAAC,WAAD,CACEY,SACE,yBAAKC,IAAI,UAAUC,UAAU,WAC3B,uBAAMC,KAAK,aAIbV,eACQL,EAETK,eACO,kBAAChB,EAAD,KACKS,KChDRkB,MANf,WACE,OACE,kBAACnB,EAAD,OCAJoB,IAASC,OACH,kBAAChC,EAAD,KACE,kBAAC,EAAD,OAENiC,SAASC,eAAe,U,gJCTbC,EAAe,CAC1BC,WAAY,GACZC,WAAW,EACXC,YAAa,IAGR,SAASC,EAAQC,EAAOC,GAC7B,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,eAAIF,EAAX,eAAoBC,EAAOE,QAAQC,OAASH,EAAOE,QAAQE,QAC7D,IAAK,cACH,IAAMC,EAASN,EAAMJ,WAAWW,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOR,EAAOE,QAAQE,SAC1E,OAAO,eAAIL,EAAX,eAAoBC,EAAOE,QAAQC,OAASE,IAC9C,QACE,OAAON,GCVb,IAAMU,EAAajC,IAAMkC,cAAc,CAAC,GAAI,eAEtCC,EAAW,SAACnD,GAAW,IACnBC,EAAaD,EAAbC,SADkB,EAKEmD,mBAFN,IAHI,mBAKnBC,EALmB,KAKXC,EALW,OAOEC,qBAAWjB,EAASJ,GAPtB,mBAOlBK,EAPkB,KAOXiB,EAPW,KAS1B,OACE,kBAACP,EAAWE,SAAZ,CAAqBP,MAAO,CAAEL,EAAOiB,EAAUH,EAAQC,IACpDrD,K,+BCjBP,kTAAO,IAGMwD,EAAW,GAGXvC,EAAY,kBAAMwC,eAAeC,SAN1B,IAOPC,EAAW,kBAAMF,eAAeC,QANxB,WAORnC,EAAiB,kBAAMkC,eAAeC,QANxB,MAOdE,EAAc,WACzB,IAAIC,EAAOJ,eAAeC,QAAQF,GAClC,OAAOM,KAAKC,MAAMF,IAGPG,EAAa,SAAAZ,GACxBK,eAAeQ,SAfG,EAeWb,IAGlBc,EAAY,SAAAC,GACvBV,eAAeQ,QAlBI,SAkBWE,IAGnBC,EAAe,SAAAC,GAC1B,IAAIR,EAAOC,KAAKQ,UAAUD,GAC1BZ,eAAeQ,QAAQT,EAAUK,IAGtBvC,EAAkB,SAAAiD,GAC7Bd,eAAeQ,QA1BU,IA0BWM,IAGzBC,EAAS,WACpBf,eAAegB,YAhCG,GAiClBhB,eAAegB,WAhCI,UAiCnBhB,eAAegB,WAhCU,KAiCzBhB,eAAegB,WAAWjB,K","file":"static/js/main.f4ef985c.chunk.js","sourcesContent":["import React from 'react';\nimport { Provider } from './context';\n\nexport default function Context(props) {\n  const { children } = props;\n  return (\n    <Provider>\n      {children}\n    </Provider>\n  );\n}\n","import React, { Suspense, lazy } from 'react';\nimport { useRoutes, usePath, navigate } from 'hookrouter';\nimport { Spin } from 'antd';\nimport {\n        getIsAuth,\n        postCurrentPath,\n        getCurrentPath\n      } from './pages/Auth/localStorage'\nimport './App.css';\n\nconst Main = lazy(() => import('./pages/Main'));\nconst Auth = lazy(() => import('./pages/Auth'));\nconst Navers = lazy(() => import('./pages/Navers'));\nconst Forms = lazy(() => import('./pages/Form'));\n\nconst routeProtect = {\n  '/navers': () => <Navers />,\n  '/register': () => <Forms mode=\"register\"/>,\n  '/edit': () => <Forms mode=\"edit\"/>,\n};\n\nconst routeDMZ = {\n  '/': () => <Auth />,\n};\n\nexport default function Router() {\n  const zoneProtect = useRoutes(routeProtect);\n  const zoneDMZ = useRoutes(routeDMZ);\n  const  currentPath  =  usePath(false);\n\n  React.useEffect(() => {\n    if(!getIsAuth() && !Object.keys(routeDMZ).includes(currentPath)){\n      navigate('/');\n    }\n    if(getIsAuth() && Object.keys(routeProtect).includes(currentPath)){\n      postCurrentPath(currentPath);\n    }\n    if(getIsAuth() && !Object.keys(routeProtect).includes(currentPath)){\n      navigate(getCurrentPath());\n    }\n\n  },[currentPath, zoneDMZ])\n\n    return (\n      <>\n        <Suspense\n          fallback={(\n            <div key=\"spinner\" className=\"spinner\">\n              <Spin size=\"large\"/>\n            </div>\n          )}\n        >\n          {!getIsAuth() &&\n                    zoneDMZ }\n\n          {getIsAuth() &&\n                  <Main>\n                      {zoneProtect}\n                  </Main>\n          }\n        </Suspense>\n      </>\n    )\n}","import React from 'react';\nimport Router from './router';\n\nfunction App() {\n  return (\n    <Router />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ContextAPI from './ContextAPI';\nimport App from './App';\n\nReactDOM.render(\n      <ContextAPI>\n        <App />\n      </ContextAPI>,\n  document.getElementById('root')\n);\n","export const initialState = {\n  dataNavers: [],\n  showModal: false,\n  naverSelect: {}\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case \"setState\":\n      return {...state,  [action.payload.nested]: action.payload.value };\n    case \"deleteState\":\n      const remove = state.dataNavers.filter(item => item.id !== action.payload.value)\n      return {...state,  [action.payload.nested]: remove};\n    default:\n      return state\n    }\n  }","import React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { initialState, reducer} from './reduncer';\n\nconst ContextAPI = React.createContext([{}, () => {}]);\n\nconst Provider = (props) => {\n  const { children } = props;\n\n  const initialValue = ({});\n\n  const [status, setStatus] = useState(initialValue);\n\n  const [ state, dispatch ] = useReducer(reducer, initialState );\n\n  return (\n    <ContextAPI.Provider value={[ state, dispatch, status, setStatus ]}>\n      {children}\n    </ContextAPI.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport { ContextAPI, Provider };\n","export const AUTH = false;\nexport const TOKEN = '@token';\nexport const CURRENTPATH = '/';\nexport const EDITTEMP = {};\n\n\nexport const getIsAuth = () => sessionStorage.getItem(AUTH);\nexport const getToken = () => sessionStorage.getItem(TOKEN);\nexport const getCurrentPath = () => sessionStorage.getItem(CURRENTPATH);\nexport const getEditTemp = () => {\n  let json = sessionStorage.getItem(EDITTEMP)\n  return JSON.parse(json)\n};\n\nexport const postIsAuth = status => {\n  sessionStorage.setItem(AUTH, status);\n};\n\nexport const postToken = token => {\n  sessionStorage.setItem(TOKEN, token);\n};\n\nexport const postEditTemp = data => {\n  let json = JSON.stringify(data)\n  sessionStorage.setItem(EDITTEMP, json);\n};\n\nexport const postCurrentPath = path => {\n  sessionStorage.setItem(CURRENTPATH, path);\n};\n\nexport const logout = () => {\n  sessionStorage.removeItem(AUTH);\n  sessionStorage.removeItem(TOKEN);\n  sessionStorage.removeItem(CURRENTPATH);\n  sessionStorage.removeItem(EDITTEMP);\n};"],"sourceRoot":""}